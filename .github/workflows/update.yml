name: üöÄ Auto Update File List

on:
  push:
    paths:
      - 'files/**'    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ files
  workflow_dispatch:   # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  update-file-list:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: üîç Scan files and generate JSON
      run: |
        echo "üîÑ Scanning files in /files directory..."
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π JSON
        echo '[' > file-list-new.json
        
        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã
        count=0
        for file in files/*.pdf; do
          if [ -f "$file" ]; then
            if [ $count -gt 0 ]; then
              echo "," >> file-list-new.json
            fi
            
            filename=$(basename "$file")
            size=$(stat -c%s "$file")
            modified=$(date -r "$file" +"%d.%m.%Y %H:%M")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            description="–î–æ–∫—É–º–µ–Ω—Ç"
            if [[ $filename == *"–æ—Ç—á–µ—Ç"* ]] || [[ $filename == *"report"* ]]; then
              description="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç"
            elif [[ $filename == *"–∏–Ω—Å—Ç—Ä—É–∫—Ü"* ]] || [[ $filename == *"manual"* ]]; then
              description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            elif [[ $filename == *"–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü"* ]] || [[ $filename == *"presentation"* ]]; then
              description="–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
            elif [[ $filename == *"–¥–æ–≥–æ–≤–æ—Ä"* ]] || [[ $filename == *"contract"* ]]; then
              description="–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç"
            fi
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if [ $size -gt 1048576 ]; then
              size_display=$(echo "scale=1; $size/1048576" | bc)" MB"
            elif [ $size -gt 1024 ]; then
              size_display=$(echo "scale=1; $size/1024" | bc)" KB"
            else
              size_display="$size B"
            fi
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è —Ñ–∞–π–ª–∞
            cat >> file-list-new.json << EOF
            {
              "name": "$filename",
              "url": "files/$filename",
              "size": "$size_display",
              "modified": "$modified",
              "description": "$description"
            }
EOF
            count=$((count+1))
            echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: $filename"
          fi
        done
        
        echo '' >> file-list-new.json
        echo ']' >> file-list-new.json
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º JSON
        jq '.' file-list-new.json > file-list.json
        
        echo "üéâ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: $count"
        
    - name: üìä Show changes
      run: |
        echo "=== –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π file-list.json ==="
        cat file-list.json
        echo "======================================"
        
    - name: üíæ Commit changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if git diff --quiet file-list.json; then
          echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç"
        else
          git add file-list.json
          git commit -m "ü§ñ Auto-update: –æ–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤"
          git push
          echo "üöÄ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—É—à–µ–Ω—ã"
        fi
